plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.umerfarooq1995.cognify_flutter"
    compileSdkVersion 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        kotlinOptions {
        freeCompilerArgs += ["-Xlint:-options"]
    }
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.umerfarooq1995.cognify_flutter"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias localProperties.getProperty('keyAlias')
            keyPassword localProperties.getProperty('keyPassword')
            storeFile localProperties.getProperty('storeFile') ? file(localProperties.getProperty('storeFile')) : null
            storePassword localProperties.getProperty('storePassword')
        }
    }

    flavorDimensions "environment"
    productFlavors {
        production {
            dimension "environment"
            applicationId "com.umerfarooq1995.cognify_flutter"
            versionNameSuffix ""
            resValue "string", "app_name", "Cognify"
        }
        dev {
            dimension "environment"
            // Align to single Firebase client
            applicationId "com.umerfarooq1995.cognify_flutter"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "Cognify Dev"
        }
        umer {
            dimension "environment"
            // Align to single Firebase client
            applicationId "com.umerfarooq1995.cognify_flutter"
            versionNameSuffix "-umer"
            resValue "string", "app_name", "Cognify Umer"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            // Ensure proper handling of native libraries
            packagingOptions {
                pickFirst '**/libc++_shared.so'
                pickFirst '**/libjsc.so'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // Play In-App Reviews
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:review-ktx:2.0.1'
    // Play In-App Updates
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    // Play Asset Delivery
    implementation 'com.google.android.play:asset-delivery:2.2.2'
    implementation 'com.google.android.play:asset-delivery-ktx:2.2.2'
    // Play Feature Delivery
    implementation 'com.google.android.play:feature-delivery:2.1.0'
    implementation 'com.google.android.play:feature-delivery-ktx:2.1.0'
    // Additional Play Services for better compatibility
    implementation 'com.google.android.gms:play-services-base:18.2.0'
}

// Firebase Google Services plugin to process google-services.json
apply plugin: "com.google.gms.google-services"
